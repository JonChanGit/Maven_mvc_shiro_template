<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/util 
    	http://www.springframework.org/schema/util/spring-util-4.0.xsd
    	http://www.springframework.org/schema/tx 
    	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
    	
<!-- 已在Spring-MVC中开启AOP与Shiro的注解支持 用于进行授权管理  使用时在Controller方法中添加注解即可-->

	<!-- Shiro 的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
		<property name="loginUrl" value="/login.do" />
		<!-- 通过unauthorizedUrl 指定没有权限操作时跳转页面 -->
		<property name="unauthorizedUrl" value="/admin_access/no_Permissions.do" />
		<!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置匿名访问 -->
				/dist/** = anon
				<!-- 退出地址 -->
				/logout.do = logout

				<!--商品查询需要商品查询权限 //，取消url拦截配置，使用注解授权方式 -->
<!-- 				/article/index.do = perms[article:show] -->
<!-- 				/article/editItem.do = perms[article:update] -->

				<!-- 所有URL都必须认证后访问 -->
				/** = authc
			</value>
		</property>
	</bean>

	<!-- 安全管理器 securityManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="customRealm" />
	</bean>

	<!-- 自定义 realm -->
	<bean id="customRealm" class="com.jon.web.shiro.CustomRealm">
		<property name="sysService" ref="sysServiceManager"></property><!-- 需要注入的是被管理的对象，而不是直接对象 -->
		<!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
		<property name="credentialsMatcher" ref="credentialsMatcher" />
	</bean>

	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="1" />
	</bean>


</beans>	